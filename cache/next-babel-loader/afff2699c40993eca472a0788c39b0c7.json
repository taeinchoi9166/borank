{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query movieImage($movieCd: String!){\\n        movieImage(movieCd: $movieCd)\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useContext, useEffect } from 'react';\nimport { useQuery } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { MovieContext } from \"../../pages\";\nvar GET_MOVIE_IMAGE = gql(_templateObject());\n\nfunction LoadErrorImage(_ref) {\n  var loading = _ref.loading,\n      error = _ref.error;\n  return __jsx(React.Fragment, null, loading && __jsx(\"div\", {\n    className: \"jsx-1120741865\" + \" \" + 'item-image-load'\n  }, \"loading...\"), error && __jsx(\"div\", {\n    className: \"jsx-1120741865\" + \" \" + 'item-image-error'\n  }, \"error!\"), __jsx(_JSXStyle, {\n    id: \"1120741865\"\n  }, [\".item-image-load.jsx-1120741865,.item-image-error.jsx-1120741865{width:180px;height:255px;background:#333;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-direciton:column;-ms-flex-direciton:column;flex-direciton:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff;font-size:21px;}\"]));\n}\n\nexport default function MovieImage(_ref2) {\n  var movieCd = _ref2.movieCd,\n      imgLoadFlag = _ref2.imgLoadFlag,\n      onFinishedImgLoad = _ref2.onFinishedImgLoad,\n      posterViewMode = _ref2.posterViewMode;\n\n  var _useContext = useContext(MovieContext),\n      togglePosterView = _useContext.togglePosterView,\n      changePosterUrl = _useContext.changePosterUrl;\n\n  var openPosterView = function openPosterView(e) {\n    var element = e.target;\n    var startX,\n        startY = 0;\n\n    if (posterViewMode === 'movie') {\n      var outerElement = document.body.querySelector('.movie-popup-wrap');\n      var outerTop = outerElement.offsetTop;\n      var outerLeft = outerElement.offsetLeft;\n      startX = outerLeft + element.offsetLeft;\n      startY = outerTop + 60 + element.offsetTop;\n    } else if (posterViewMode === 'rank') {\n      startX = element.offsetLeft;\n      startY = element.offsetTop - window.scrollY;\n    }\n\n    togglePosterView({\n      x: startX,\n      y: startY,\n      w: element.width,\n      h: element.height,\n      url: element.href,\n      mode: posterViewMode\n    });\n    changePosterUrl(element.currentSrc);\n  };\n\n  useEffect(function () {}, [movieCd, imgLoadFlag]);\n\n  if (true) {\n    var _useQuery = useQuery(GET_MOVIE_IMAGE, {\n      variables: {\n        movieCd: movieCd\n      }\n    }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n    if (data && data.movieImage) {\n      return __jsx(React.Fragment, null, __jsx(\"img\", {\n        src: data.movieImage,\n        alt: '영화 포스터',\n        onClick: openPosterView,\n        className: \"jsx-3301425359\" + \" \" + 'movie-image'\n      }), __jsx(_JSXStyle, {\n        id: \"3301425359\"\n      }, [\".movie-image.jsx-3301425359{max-width:180px;height:auto;cursor:pointer;-webkit-flex:1;-ms-flex:1;flex:1;}\"]));\n    } else {\n      return __jsx(LoadErrorImage, {\n        loading: loading,\n        error: error\n      });\n    }\n  } else {\n    return __jsx(LoadErrorImage, {\n      loading: true,\n      error: false\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}