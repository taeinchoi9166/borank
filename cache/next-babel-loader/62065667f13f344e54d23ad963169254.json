{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect, useContext } from 'react';\nimport MovieItem from \"./MovieItem\";\nimport { Query } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { MovieContext } from \"../../pages\";\nimport { toDateFormat } from \"../../common/util\";\nconst GET_RANK_ITEMS = gql`\n        query rankItems($date: String!){\n            rankItems(date: $date) {    \n                movieCd\n                rank\n                rankInten\n                isNewRanked\n                name\n                openDate\n                salesAcc\n                audiAcc\n            }\n        }\n`;\nexport default function MovieList() {\n  const {\n    nDate\n  } = useContext(MovieContext);\n  useEffect(() => {}, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-3050782061\" + \" \" + \"list-inner\"\n  }, __jsx(Query, {\n    query: GET_RANK_ITEMS,\n    variables: {\n      date: toDateFormat(new Date(nDate.getTime() - 1000 * 60 * 60 * 24))\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    //console.log(loading, error, data);\n    if (loading) return __jsx(\"div\", {\n      className: \"jsx-3050782061\" + \" \" + \"list-load\"\n    }, \"Loading...\");\n\n    if (error) {\n      //console.log(error);\n      return __jsx(\"div\", {\n        className: \"jsx-3050782061\" + \" \" + \"list-error\"\n      }, __jsx(\"span\", {\n        className: \"jsx-3050782061\"\n      }, \"\\uD83D\\uDE20\"), __jsx(\"br\", {\n        className: \"jsx-3050782061\"\n      }), \"\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4. \\uD398\\uC774\\uC9C0\\uB97C \\uC0C8\\uB85C\\uACE0\\uCE68\\uD558\\uC2DC\\uAC70\\uB098 \\uAD00\\uB9AC\\uC790\\uC5D0\\uAC8C \\uBB38\\uC758\\uD558\\uC138\\uC694.\");\n    }\n\n    if (data) {\n      //console.log(data);\n      const dList = data.rankItems;\n      const itemList = [];\n      let key = 0;\n\n      for (const item of dList) {\n        itemList.push(__jsx(MovieItem, _extends({\n          key: key++\n        }, item)));\n      }\n\n      return itemList;\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"3050782061\"\n  }, [\".list-inner.jsx-3050782061{padding:20px;display:inline-block;width:100%;}\", \".list-load.jsx-3050782061,.list-error.jsx-3050782061{width:100%;height:200px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:40px;text-align:center;}\", \".list-error.jsx-3050782061 span.jsx-3050782061{font-size:78px;}\"]));\n}","map":null,"metadata":{},"sourceType":"module"}