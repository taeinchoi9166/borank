{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect } from 'react';\nimport { useQuery } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { MovieContext } from \"../../pages\";\nconst GET_MOVIE_IMAGE = gql`\n    query movieImage($movieCd: String!){\n        movieImage(movieCd: $movieCd)\n    }\n`;\n\nfunction LoadErrorImage({\n  loading,\n  error\n}) {\n  return __jsx(React.Fragment, null, loading && __jsx(\"div\", {\n    className: \"jsx-1120741865\" + \" \" + 'item-image-load'\n  }, \"loading...\"), error && __jsx(\"div\", {\n    className: \"jsx-1120741865\" + \" \" + 'item-image-error'\n  }, \"error!\"), __jsx(_JSXStyle, {\n    id: \"1120741865\"\n  }, [\".item-image-load.jsx-1120741865,.item-image-error.jsx-1120741865{width:180px;height:255px;background:#333;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-direciton:column;-ms-flex-direciton:column;flex-direciton:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff;font-size:21px;}\"]));\n}\n\nexport default function MovieImage({\n  movieCd,\n  imgLoadFlag,\n  onFinishedImgLoad,\n  posterViewMode\n}) {\n  const {\n    togglePosterView,\n    changePosterUrl\n  } = useContext(MovieContext);\n\n  const openPosterView = e => {\n    const element = e.target;\n    let startX,\n        startY = 0;\n\n    if (posterViewMode === 'movie') {\n      const outerElement = document.body.querySelector('.movie-popup-wrap');\n      const outerTop = outerElement.offsetTop;\n      const outerLeft = outerElement.offsetLeft;\n      startX = outerLeft + element.offsetLeft;\n      startY = outerTop + 60 + element.offsetTop;\n    } else if (posterViewMode === 'rank') {\n      startX = element.offsetLeft;\n      startY = element.offsetTop - window.scrollY;\n    }\n\n    togglePosterView({\n      x: startX,\n      y: startY,\n      w: element.width,\n      h: element.height,\n      url: element.href,\n      mode: posterViewMode\n    });\n    changePosterUrl(element.currentSrc);\n  };\n\n  useEffect(() => {}, [movieCd, imgLoadFlag]);\n\n  if (true) {\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_MOVIE_IMAGE, {\n      variables: {\n        movieCd: movieCd\n      }\n    });\n\n    if (data && data.movieImage) {\n      return __jsx(React.Fragment, null, __jsx(\"img\", {\n        src: data.movieImage,\n        alt: '영화 포스터',\n        onClick: openPosterView,\n        className: \"jsx-3301425359\" + \" \" + 'movie-image'\n      }), __jsx(_JSXStyle, {\n        id: \"3301425359\"\n      }, [\".movie-image.jsx-3301425359{max-width:180px;height:auto;cursor:pointer;-webkit-flex:1;-ms-flex:1;flex:1;}\"]));\n    } else {\n      return __jsx(LoadErrorImage, {\n        loading: loading,\n        error: error\n      });\n    }\n  } else {\n    return __jsx(LoadErrorImage, {\n      loading: true,\n      error: false\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}